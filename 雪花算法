负数是其正数取反在加1,第一个bit必定为1
负数的二进制是使用补码表示的
0 000000000000000000000000000000000000000000000000000000000000001          1
1 111111111111111111111111111111111111111111111111111111111111111         -1  补码


0 000000000000000000000000000000000000000000000000000001111111111         1023 
1 111111111111111111111111111111111111111111111111111110000000000         -1 << 10 = -1024  
 

1 11111111111111111111111111111111111111111111111111111 1111111111        -1
1 11111111111111111111111111111111111111111111111111111 0000000000        -1 << 10 = -1024  
0 00000000000000000000000000000000000000000000000000000 1111111111        -1 ^ -1024 = -1 ^ (-1 << 10) = 1023


1 11111111111111111111111111111111111111111111111111111 1111111111        -1
1 11111111111111111111111111111111111111111111111111100 0000000000        -1 << 12 = -4096

0 00000000000000000000000000000000000000000000000000011 1111111111        -1 ^ -4096 = -1 ^ (-1 << 12) = 4095


正数的原码=反码=补码
  
负数:
 例子: 
    62的原码是  0000000000000000000000000000000000000000000000000000000000111110

    -62的原码就是  1 000000000000000000000000000000000000000000000000000000000 111110

    -62的反码就是  1 111111111111111111111111111111111111111111111111111111111 000001

    -62的补码就是反码加1
    1 111111111111111111111111111111111111111111111111111111111 000010

	负数的原码等于其正数的原码第一位取1
	反码就是除第一位以外其他全部取反
	补码就是反码加1  


左移全部用0补上
右移:如果是正数就用0，负数就是用1，其实就是第一位是什么就用什么补上  
